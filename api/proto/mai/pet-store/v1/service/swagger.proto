syntax = "proto3";

package sbercloud.evo.inference.billing.v1;

import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/DeoEsor/MAI-course-backend-go/pkg/api/proto/mai/pet-store/v1/service;service";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Pet Store Service";
    version: "1.0";
  };

  external_docs: {
    url: "https://yandex.ru"
  }
  security_definitions: {
    security: {
      key: "Bearer";
      value: {
        type: TYPE_API_KEY;
        name: "Authorization";
        in: IN_HEADER;
      };
    };
  };
  responses: [
    {key: "200", value: {
      description: "Успешно"
    }},
    {key: "400", value: {
      description: "Некорректный запрос",
      schema:  {
        json_schema: {ref: ".google.rpc.Status"}
      }
    }},
    {key: "401", value: {description: "Необходима авторизация",
      schema:  {
        json_schema: {ref: ".google.rpc.Status"}
      }
    }},
    {key: "403", value: {description: "Доступ запрещен",
      schema:  {
        json_schema: {ref: ".google.rpc.Status"}
      }
    }},
    {key: "404", value: {description: "Ресурс не найден",
      schema:  {
        json_schema: {ref: ".google.rpc.Status"}
      }
    }},
    {key: "500", value: {description: "Внутренняя ошибка сервера",
      schema:  {
        json_schema: {ref: ".google.rpc.Status"}
      }
    }}
  ]
};
